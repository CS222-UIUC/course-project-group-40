# This is a workflow for Python file pre-check

name: Actions for Python

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        working-directory: ./backend/vision-model/
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        working-directory: ./backend/vision-model/
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 $(shell git ls-files '*.py') --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 $(shell git ls-files '*.py') --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        working-directory: ./backend/vision-model/
        run: |
          pytest ./test/test.py
      - name: Build coverage file
        working-directory: ./backend/vision-model/
        run: |
          coverage run --source=./src -m pytest -v ./test/test.py && coverage report -m > ./test/pytest-coverage.log
          # pytest --cache-clear --cov=src test/test.py > ./test/pytest-coverage.log
      - name: Comment coverage
        uses: coroo/pytest-coverage-commentator@v1.0.2
